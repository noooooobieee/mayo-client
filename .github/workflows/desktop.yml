name: Desktop Build Mesa (nightly)

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  actions: write

jobs:
  build-desktop:
    name: Build on ${{ matrix.os }} (nightly)
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: pnpm

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          # On Windows, add MSVC target; on Linux/macOS, default host target is used.
          # We use an include with an empty string when not on Windows.
          targets: ${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || '' }}

      - name: Install dependencies
        run: pnpm install

      - name: Set build type for nightly
        run: echo "MESA_BUILD_TYPE=nightly" >> $GITHUB_ENV

      - name: Run Tauri build script (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: ./scripts/build.ps1

      - name: Run Tauri build script (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: ./scripts/build.sh

      - name: Get build date (Windows)
        if: matrix.os == 'windows-latest'
        id: date
        shell: pwsh
        run: |
          $date = Get-Date -Format "yyyyMMdd"
          echo "date=$date" >> $env:GITHUB_OUTPUT

      - name: Get build date (Linux/macOS)
        if: matrix.os != 'windows-latest'
        id: date
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mesa-client-nightly-${{ matrix.os }}-${{ steps.date.outputs.date }}
          path: |
            src-tauri/target/release/bundle/msi/
            src-tauri/target/release/bundle/nsis/
            src-tauri/target/release/bundle/deb/
            src-tauri/target/release/bundle/appimage/
            src-tauri/target/release/bundle/dmg/
            src-tauri/target/release/bundle/osx/
