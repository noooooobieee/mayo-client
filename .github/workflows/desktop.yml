name: Desktop Build Mesa (nightly)

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: write

jobs:
  build-desktop:
    name: Build on ${{ matrix.os }} (nightly)
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: pnpm

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || '' }}

      - name: Install dependencies
        run: pnpm install

      - name: Install prerequisites (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update \
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Set build type for nightly
        run: echo "MESA_BUILD_TYPE=nightly" >> $GITHUB_ENV

      - name: Debug workspace (list files)
        if: runner.os != 'Windows'
        run: |
          echo "Working directory: $PWD"
          echo "Contents of repo root:"
          ls -al .
          echo "Contents of .ci/:"
          ls -al .ci || echo ".ci/ folder not found"

      - name: Make build.sh executable (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          chmod +x "$GITHUB_WORKSPACE/.ci/build.sh"

      - name: Run Tauri build script (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          bash "$GITHUB_WORKSPACE/.ci/build.sh"

      - name: Run Tauri build script (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          & "$env:GITHUB_WORKSPACE/.ci/build.ps1"

      - name: Get build date (UTC)
        id: date
        shell: bash
        run: echo "date=$(date -u +'%Y%m%d')" >> "$GITHUB_OUTPUT"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mesa-client-nightly-${{ matrix.os }}-${{ steps.date.outputs.date }}
          path: |
            src-tauri/target/release/bundle/msi/
            src-tauri/target/release/bundle/nsis/
            src-tauri/target/release/bundle/deb/
            src-tauri/target/release/bundle/appimage/
            src-tauri/target/release/bundle/dmg/
            src-tauri/target/release/bundle/osx/
