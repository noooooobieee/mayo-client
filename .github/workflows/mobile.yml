name: Mobile Build Mesa – Android (nightly)

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: write

jobs:
  build:
    name: Build for Android (armv7 + aarch64 + x86 + x86_64)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install Rust + Android targets
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      # ------------------------------------------------------------------
      #  Download & install NDK 25.2.9519653
      # ------------------------------------------------------------------
      - name: Download & install NDK 25.2.9519653
        run: |
          cd /tmp
          wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip -q android-ndk-r25b-linux.zip
          sudo mkdir -p "$ANDROID_SDK_ROOT/ndk"
          sudo mv android-ndk-r25b "$ANDROID_SDK_ROOT/ndk/25.2.9519653"
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Sanity-check NDK
        run: |
          test -f "$ANDROID_NDK_ROOT/source.properties" || { echo "NDK broken"; exit 1; }
          echo "✅ NDK ready at $ANDROID_NDK_ROOT"

      # ------------------------------------------------------------------
      #  Android SDK components (NDK already in place)
      # ------------------------------------------------------------------
      - name: Install Android SDK components
        uses: android-actions/setup-android@v3
        with:
          extra-packages: |
            platform-tools
            platforms;android-34
            build-tools;34.0.0

      # ------------------------------------------------------------------
      #  Cargo linker overrides
      # ------------------------------------------------------------------
      - name: Create .cargo/config.toml
        run: |
          mkdir -p .cargo
          cat > .cargo/config.toml <<'EOF'
          [target.aarch64-linux-android]
          linker = "aarch64-linux-android24-clang"

          [target.armv7-linux-androideabi]
          linker = "armv7a-linux-androideabi24-clang"

          [target.i686-linux-android]
          linker = "i686-linux-android24-clang"

          [target.x86_64-linux-android]
          linker = "x86_64-linux-android24-clang"
          EOF

      - name: Install frontend deps
        run: pnpm install

      - name: Tauri Android init (CI mode)
        run: pnpm tauri android init --ci
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
          ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
          NDK_HOME: ${{ env.NDK_HOME }}

      # ------------------------------------------------------------------
      #  Create throw-away debug keystore + insert signing config
      # ------------------------------------------------------------------
      - name: Create .ci directory & debug keystore
        run: |
          mkdir -p .ci
          keytool -genkey -v \
            -keystore .ci/upload-keystore.jks \
            -storetype JKS -keyalg RSA -keysize 2048 -validity 10000 \
            -alias upload \
            -storepass android \
            -keypass android \
            -dname "CN=CI, OU=CI, O=CI, L=CI, S=CI, C=US"

      - name: Apply signing config
        run: |
          cp .ci/signing.gradle src-tauri/gen/android/app/signing.gradle
          echo "apply from: 'signing.gradle'" >> src-tauri/gen/android/app/build.gradle

      - name: Build APK for all targets
        run: pnpm tauri android build --apk
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
          ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
          NDK_HOME: ${{ env.NDK_HOME }}

      - name: Get build date (UTC)
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mesa-android-nightly-${{ steps.date.outputs.date }}
          path: |
            src-tauri/gen/android/app/build/outputs/apk/**/*.apk
